{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OAEI,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAO,GACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,SASzC,2BACIC,KAAK,OACLC,MAAOT,EACPU,SAtBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,YCLlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAGlC,OACI,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACjB,2BAAIA,K,uBCRJK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAIbN,EAJa,iDAImCO,UAAUF,GAJ7C,+DAMAG,MAAMR,GANN,cAMbS,EANa,gBAOEA,EAAKC,OAPP,uBAOZC,EAPY,EAOZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAbvB,kBAiBZY,GAjBY,4CAAH,sDCOPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoCtC,OA7BAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAGf,UAGZ,CAACb,IAeIc,ED5BuBM,CAAapB,GAA/BU,EALuB,EAK5BJ,KAAYO,EALgB,EAKhBA,QAGnB,OACI,oCACA,wBAAIjB,UAAU,qCAAqCI,GAClDa,GAAW,sCACZ,yBAAKjB,UAAU,8CAGPc,EAAOF,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eAAaY,IAAKZ,EAAIhB,IAClBgB,UElBPa,EAAe,WAAM,MAKM3C,mBAAS,CAAC,cALhB,mBAKvB4C,EALuB,KAKX7C,EALW,KAgB9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAID,4BAEI6C,EAAWf,KAAI,SAAAR,GAAQ,OACvB,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,U,MCzBjDwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9e704c1d.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); //useState () tiene un error de indefinido si no recibe nada, usar ''\r\n    const handleInputChange = (e) => {\r\n       // console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log('Submit hecho')\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats =>[ inputValue,...cats]);\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    return (\r\n    \r\n        <form onSubmit={handleSubmit}>\r\n        <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>    \r\n \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    //console.log(id,title,url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n          <img src={url} alt={title}/>\r\n             <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n//  {img.title} ","export const getGifs = async(category) =>{\r\n\r\n   \r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=dQaadwLZwFULzd2dI2vMmTfZdGI3SMuj`\r\n    \r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    //console.log(gifs) \r\n    return gifs;\r\n}","//import React,{useState, useEffect} from 'react'\r\n//import { getGifs } from '../helpers/getGifs'; \r\n//el import de arriba se usa en el custom hook\r\nimport { GifGridItem } from './GifGridItem';\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n//    const [images, setImages] = useState([]);\r\n//    const state = useFetchGifs();\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid animate__animated animate__flash\">\r\n\r\n            {\r\n                images.map(img => (\r\n                <GifGridItem key={img.id}\r\n                {...img}\r\n                />\r\n                ))\r\n            }\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n    //const [count, setCount] = useState(0)\r\n\r\n    // getGifs();\r\n/*\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(setImages);\r\n    },[category]) */\r\n\r\n//.then(imgs => setImages(imgs))\r\n\r\n\r\n/*     const getGifs = async() =>{\r\n\r\n   \r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=dQaadwLZwFULzd2dI2vMmTfZdGI3SMuj`\r\n        \r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url,\r\n            }\r\n        })\r\n        console.log(gifs) \r\n        setImages(gifs);\r\n    } */\r\n\r\n    /* <h3>{count}</h3>\r\n<button onClick={ () => setCount ( count + 1 ) }></button> */\r\n\r\n//images.map(img => (\r\n//sin desestructuracion linea 53\r\n/* \r\n<ol>\r\n{\r\n    images.map(({id,title}) => (\r\n                <li key={id}>{title}</li>\r\n    ))\r\n}\r\n</ol>\r\n */\r\n\r\n /* <div className=\"card-grid\">\r\n\r\n            {\r\n                images.map(img => (\r\n                <GifGridItem key={img.id}\r\n                {...img}\r\n                />\r\n                ))\r\n            }\r\n        </div> */","import {useState, useEffect} from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n\r\n                setTimeout(()=>{\r\n                    //console.log(imgs)\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                },1000);\r\n  \r\n            });\r\n    },[category])\r\n\r\n/*     setTimeout(()=>{\r\n        setState({\r\n            data:[1,2,3,4,5,6,7],\r\n            loading:false\r\n        })\r\n\r\n\r\n\r\n    },3000); */\r\n    \r\n    \r\n    \r\n    \r\n    return state; //{data:[], loading: true};\r\n\r\n\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    // no se suele usar arreglos constantes porque luego no se les puede agregar elementos\r\n    //luego se cambia la key category por la id de la db, no se usa el indice i\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    \r\n    /* const handleAdd = () =>{\r\n        //categories.push('HunterXHunter'); no es una buena practica\r\n        //setCategories('HunterXhunter') asi no se agregan elementos\r\n        setCategories([...categories,'HunterXHunter'])\r\n        //setCategories(cats =>[...categories,'HunterXHunter'])\r\n        console.log(categories);\r\n    } */\r\n    //console.log(categories);\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n\r\n\r\n           <ol>\r\n               {\r\n               categories.map(category => (\r\n               <GifGrid key={category} category={category}/>\r\n               ))\r\n                   \r\n                }\r\n           </ol>\r\n        </div>\r\n    )\r\n}\r\n//            <button onClick={handleAdd}>Agregar</button>\r\n//<AddCategory/>\r\n//<AddCategory setCategories={setCategories}/>\r\n//const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}